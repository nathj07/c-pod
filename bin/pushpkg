#!/usr/bin/env ruby
#
# Push a package to the YUM repo
# The server-side CGI rebuilds the yum indices
#
require 'fileutils'
require 'optparse'
require 'ostruct'

def info msg
    print "\033[32m#{msg}\033[0m"
end

types = [:stable, :unstable, :lifted]

opts = OpenStruct.new(type: :unstable, debug: false, force: nil, repo: ENV['CPOD'] || 'c-pod.local')

OptionParser.new do |o|
    o.banner = "Usage: pushpkg [options] pkg ..."
    o.separator ""
    o.separator "Push RPM and GEM packages to C-Pod server and rebuild indices"
    o.separator "Options:"

    o.on( '-?', '--help', 'Display this screen' ) do
        puts o
        exit
    end
    o.on('-d', '--debug', "Debug") do
        opts.debug = true
    end
    o.on('-t', '--type TYPE', types, "Type: #{types.join(', ')} (default: #{opts.type})") do |t|
        opts.type = t
    end
    o.on('-r', '--repo HOST', "The C-Pod server (default #{opts.repo})") do |n|
        opts.repo = n
    end
    o.on('-f', '--force', "Force complete metadata rebuild") do
        opts.force = true
    end
    o.parse! rescue (puts "Error: #{$!}"; puts o; exit)
end

base = File.absolute_path('../..', File.dirname(__FILE__))
curlopts = ["-F type=#{opts.type}"]
curlopts.push "-F debug=yes" if opts.debug
curlopts.push "-F force=yes" if opts.force

info "Using C-Pod #{opts.repo}\n"
files = ARGV.select { |f| File.exist?(f) ? true: ( puts "File #{f} not found"; false ) }
files.each do |f|
    info "Uploading #{f}\n"
    cmd = "curl -f -# -w '%{http_code}' #{curlopts.join(' ')} -F pkgfile=@#{f} http://#{opts.repo}/bin/rx_pkg.cgi"
    puts `#{cmd}`
end

info "Rebuilding Indices\n"
curlopts.push("-F rebuild=yes")
system("curl -f --silent #{curlopts.join(' ')} http://#{opts.repo}/bin/rx_pkg.cgi")

# vim: sts=4 sw=4 ts=8
