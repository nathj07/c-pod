#!/usr/bin/env ruby
#
# Update a local copy of the main repo
#
require 'optparse'
require 'ostruct'
require 'fileutils'

base = File.absolute_path('../..', File.dirname(__FILE__))
typelist = [:isos, :os, :updates, :extras]
versions = ['5','6','7']
opts = OpenStruct.new( mirror: 'rsync://repos.lax.quadranet.com/centos', version: 6, types: [:os, :updates] )

if Process.euid == 0
    puts "Hey - don't run this as root"
    exit 2
end

OptionParser.new do |o|
    o.banner = "usage: #{o.program_name} [options]"
    o.separator "Update local Yum repository from CentOS mirror. Options:"

    o.on_tail( '-?', '--help', 'Display this screen' ) do
        STDERR.puts o
        exit
    end
    o.on('-m', '--mirror MIRROR', String, "The remote mirror (default: #{opts.mirror})") do |m|
	opts.mirror = m
    end
    o.on('-v', '--version VERSION', versions, "The required CentOS version (#{versions} default: #{opts.version})") do |v|
        opts.version = v
    end
    o.on('-t', '--types TYPES', Array, "Types to Sync (default: #{opts.types})") do |types|
        badtypes = types.reject{|t| typelist.include? t.to_sym }
        if badtypes.size > 0
            puts "#{badtypes.join(', ')} not valid type(s)"
            exit 2
        end
	opts.types = types.map(&:to_sym)
    end
    begin
        o.parse!
        raise "You don't need arguments!" if ARGV.size > 0
    rescue
       STDERR.puts "Error: #{$!}"
       STDERR.puts o
       exit 1
    end
end

rsync  = "rsync -avSHP --progress --delete"

opts.types.each do |type|
    FileUtils.mkdir_p "#{base}/osmirror/centos/#{opts.version}/#{type}/x86_64"
    cmd = "#{rsync} #{opts.mirror}/#{opts.version}/#{type}/x86_64/ #{base}/osmirror/centos/#{opts.version}/#{type}/x86_64"
    puts cmd
    system cmd
    puts ($? != 0) ? "Failed": "Done"
end

# vim: set sts=4 sw=4 ts=8:
