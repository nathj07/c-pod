#!/usr/bin/env ruby
#
# Update a local copy of the main repo
#
require 'optparse'
require 'ostruct'

base = File.absolute_path('../..', File.dirname(__FILE__))
opts = OpenStruct.new( repo: (ENV['C-POD'] || 'c-pod.local'), user: 'c-pod' )

OptionParser.new do |o|
    o.banner = "Script to update a local copy of the yum_repos from a remote C-POD"

    o.on( '-?', '--help', 'Display this screen' ) do
        puts o
        exit
    end
    o.on('-u', '--user USER', String, "The user to use (default: #{opts.user})") do |u|
	opts.user = u
    end
    o.on('-r', '--repo REPO', String, "The C-POD repo site to use (default: #{opts.repo})") do |m|
	opts.repo = m
    end
    o.parse!
    if ARGV.size > 0
	puts "You don't need arguments!"
	puts o.help 
	exit 2
    end
end

unless Process.euid == 0 
    puts "Hey - you need to run this as root"
    exit 2
end

puts "Updating GEM packages..."
cmd = "rsync -avz --delete --progress #{opts.user}@#{opts.repo}:/data/gem_repo #{base}/"
puts cmd
system cmd
puts ($? != 0) ? "Failed": "Done"
puts "Updating RPM packages..."
cmd = "rsync -avz --delete --progress #{opts.user}@#{opts.repo}:/data/yum_repos #{base}/"
puts cmd
system cmd
puts ($? != 0) ? "Failed": "Done"
puts "Updating Downloads packages..."
cmd = "rsync -avz --progress #{opts.user}@#{opts.repo}:/data/downloads #{base}/"
puts cmd
system cmd
puts ($? != 0) ? "Failed": "Done"

# vim: set sts=4 sw=4 ts=8:
