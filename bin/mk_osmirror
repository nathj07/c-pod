#!/usr/bin/env ruby
#
# Download and mount the disk images
# Create appropriate links
#
# TODO This approach is probably no longer optimal. Now that we've copied the CentOS mirror
# structure (in osmirror/centos) we could simply rsync what we need. This approach does have
# the advantage of 'version' fixing more easily.
#
require 'optparse'
require 'fileutils'

File.umask(0002)
data = File.absolute_path('../../cpoddata', File.dirname(__FILE__))
arch = 'x86_64'
mirror='http://centos.mirror.freedomvoice.com'
force = false

OptionParser.new do |opts|
    opts.banner = "Script to download, mount and link OS distributions"

    opts.on( '-?', '--help', 'Display this screen' ) do
        puts opts
        exit
    end
    opts.on('-f', '--[no]-force', "Remove and re-create existing links") do |m|
	force = m
    end
    opts.on('-m', '--mirror', String, "The CentOS mirror site to use (default: #{mirror}") do |m|
	mirror = m
    end
    opts.parse!
    if ARGV.size > 0
	puts opts.help 
	exit 2
    end
end

unless Process.euid == 0 
    puts "Hey - you need to run this as root"
    exit 2
end

versionset = {
    '5.9' => { 1 => 'bin-DVD-1of2', 2 => 'bin-DVD-2of2', 'net' => 'netinstall' },
#    '6.3' => { 1 => 'bin-DVD1', 2 => 'bin-DVD2', 'net' => 'netinstall', 'min' => 'minimal'},
    '6.4' => { 1 => 'bin-DVD1', 2 => 'bin-DVD2', 'net' => 'netinstall', 'min' => 'minimal'}
} 

versionset.keys.each do |version|
    major = version.to_i
    versionset[version].each do |shortname,name|
	imagefile = "CentOS-#{version}-#{arch}-#{name}.iso"
	FileUtils.cd "#{data}/osmirror/centos/#{major}/isos/#{arch}"
	unless File.exist? imagefile
		puts "Downloading #{imagefile}..."
		`curl -O -# #{mirror}/#{version}/isos/#{arch}/#{imagefile}`
	end
    end
    # Now make the consolidated distribution directories

    targetdir = "#{data}/osmirror/centos/#{version}/os/#{arch}"
    FileUtils.mkdir_p targetdir
    versionset[version].keys.select{|k| k.is_a? Integer}.sort.each do |shortname|
	name = versionset[version][shortname]
	imagefile = "CentOS-#{version}-#{arch}-#{name}.iso"
	srcdir = "#{base}/osmirror/centos/#{version}-#{shortname}"
	FileUtils.mkdir_p srcdir
	`mount -o loop -t iso9660 #{base}/isos/#{imagefile} #{srcdir}`
	cmd = "rsync -rlt #{targetdir}-#{shortname}/* #{targetdir}"
	puts cmd
	res = `#{cmd}`
	puts res if $? != 0
	`umount #{srcdir}`
	FileUtils.rmdir srcdir
    end
    FileUtils.cd "#{data}/osmirror/"
    FileUtils.ln_sf "centos#{version}", "centos#{major}"
end

# vim: set sts=4 sw=4 ts=8:
